<div class="container-fluid">
	<div class="row">
		<div class="w-100 col-md-6 offset-md-3">
			<div class='row pt-2'>
				<form id="search" onsubmit="event.preventDefault();" class="col-md-12 form-inline">
					<input id="number" class="form-control col-md-10" type="search" placeholder="Номер результата" onKeyPress="if (event.keyCode < 48 || event.keyCode > 57) event.returnValue=false;">
					<button class="btn btn-outline-success my-2 my-sm-0 col-md-2" id="submit" type="submit">Найти</button>
				</form>

			</div>
			<div id="output" style="display: none;">
				<div id="outputText" class="col-md-12 border border-secondary bg-light rounded">
					
				</div>
				<div id="outputTypes"></div>
				
				<div class="form-check">
					<input class="form-check-input" type="checkbox" value="Подлежащее" id="subject">
					<label class="form-check-label subject" for="subject">
						Подлежащее
					</label>
				</div>			
				<div class="form-check">
					<input class="form-check-input" type="checkbox" value="Сказуемое" id="predicate">
					<label class="form-check-label predicate" for="predicate">
						Сказуемое
					</label>
				</div>
				<div class="form-check">
					<input class="form-check-input" type="checkbox" value="Определение" id="definition">
					<label class="form-check-label definition" for="definition">
						Определение
					</label>
				</div>
				<div class="form-check">
					<input class="form-check-input" type="checkbox" value="Обстоятельство" id="condition">
					<label class="form-check-label condition" for="condition">
						Обстоятельство
					</label>
				</div>
				<div class="form-check">
					<input class="form-check-input" type="checkbox" value="Дополнение" id="addition">
					<label class="form-check-label addition" for="addition">
						Дополнение
					</label>
				</div>
			</div>
		</div>
	</div>
</div>

 <script>

var rolesDict = {
	"subject" : "Подлежащее",
	"predicate" : "Сказуемое",
	"definition" : "Определение",
	"condition" : "Обстоятельство",
	"addition" : "Дополнение"
}

function markWords(role) {
	let i = 0;
	for(let i in responseAnaliz) {
		if (responseAnaliz[i].role==rolesDict[role]){
			$( ".word" ).eq( i ).addClass(role);
			console.log("word", responseAnaliz[i].role, responseAnaliz[i].word);
		}
		i++;
	}
}



if (/^#result[/](\d*$)/.test(window.location.hash)){
	resultNUM=window.location.hash.match(/^#result[/](\d*$)/)[1];
	$('#loader').hide();
	$('#page').fadeIn();
}else{
	if(resultNUM!=undefined)window.location.hash='#result/'+resultNUM;
	else{
		$('#loader').hide();
		$('#page').fadeIn();
	}
}
var JSONdata;
if (resultNUM!=undefined){
    console.log(docText)
    $( "#outputText" ).html('');
    $('#output').show();
    
    let checkboxArr = []
    let wordArr = docText.split(' ');
    
    for(let i in responseAnaliz)
    {
        $( "#outputText" ).append('<div class="word">'+responseAnaliz[i].word+'</div>');
    }	
}
$( "#submit" ).on( "click", function() {
	if($( "#number" ).val().length>0) window.location.hash='#result/'+$( "#number" ).val();
});
$('#subject').on('click', function(){
	if ($('#subject').is(':checked')){
		markWords("subject");
	} else {
		$( ".word" ).removeClass('subject');
	}
});

$('#predicate').on('click', function(){
	if ($('#predicate').is(':checked')){
		markWords("predicate");
	} else {
		$( ".word" ).removeClass('predicate');
	}
});

$('#definition').on('click', function(){
	if ($('#definition').is(':checked')){
		markWords("definition");
	} else {
		$( ".word" ).removeClass('definition');
	}
});

$('#condition').on('click', function(){
	if ($('#condition').is(':checked')){
		markWords("condition");
	} else {
		$( ".word" ).removeClass('condition');
	}
});

$('#addition').on('click', function(){
	if ($('#addition').is(':checked')){
		markWords("addition");
	} else {
		$( ".word" ).removeClass('addition');
	}
});

console.log("responseAnaliz ->", responseAnaliz)
</script>
<style>
.word {
    display: inline-block;
    margin: 2px 2px;
}
.subject {
    background-color: yellow;
}
.predicate {
    background-color: lime;
}
.definition {
    background-color: cyan;
}
.condition {
    background-color: gray;
}
.addition {
    background-color: pink;
}

</style>
